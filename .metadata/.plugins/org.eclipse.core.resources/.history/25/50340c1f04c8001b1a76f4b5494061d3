package com.adp.assignment.controller;

import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.adp.assignment.model.Requirements;

@RestController
@RequestMapping("/count-coins")
public class countCoins {

	@GetMapping("/bill")
	public void calculateLeastNumberOfCoinsRequiredForAmount(@RequestBody Requirements requirements) {
		
		System.out.println("test = " + requirements.getAmount());
		System.out.println("test = " + requirements.getLimit1());
		System.out.println("test = " + requirements.getLimit2());
		System.out.println("test = " + requirements.getLimit3());
		System.out.println("test = " + requirements.getLimit4());

		try {
			double amount = 10;

			double[] notes = { 0.25, 0.10, 0.05, 0.01 };

			double[] noteCounter = { 0, 0, 0, 0 };

			int[] limit = { 100, 100, 100, 100 };

			double initialAmount = amount;

			for (int i = 0; i < 4; i++) {

				if (amount >= notes[i]) {
					if (limit[i] * notes[i] > amount) {
						noteCounter[i] = amount / notes[i];
						amount = amount - noteCounter[i] * notes[i];
					} else {
						var temp = amount - (notes[i] * limit[i]);

						noteCounter[i] = (notes[i] * limit[i]) / notes[i];
						amount = amount - (notes[i] * limit[i]);
					}
				}

			}

			double sum = 0;
			double fewerNumberOfCoins = 0;

			for (var i = 0; i < 4; i++) {
				if (noteCounter[i] > 0) {
					sum = sum + (notes[i] * noteCounter[i]);
				}
				fewerNumberOfCoins = fewerNumberOfCoins + noteCounter[i];
			}

			if (sum == initialAmount) {
				System.out.println("Success = " + fewerNumberOfCoins);
			} else {
				System.out.println("Machine does not have enough coins = ");
			}

		} catch (Exception e) {
			System.out.println("Inside catch");
			e.printStackTrace();
		}

	}

}
